{"format": "torch", "nodes": [{"name": "model", "id": 139834158110608, "class_name": "UnetSkipConnectionBlock(\n  (model): Sequential(\n    (0): Conv2d(3, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)\n    (1): UnetSkipConnectionBlock(\n      (model): Sequential(\n        (0): LeakyReLU(negative_slope=0.2, inplace=True)\n        (1): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)\n        (2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (3): UnetSkipConnectionBlock(\n          (model): Sequential(\n            (0): LeakyReLU(negative_slope=0.2, inplace=True)\n            (1): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)\n            (2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (3): UnetSkipConnectionBlock(\n              (model): Sequential(\n                (0): LeakyReLU(negative_slope=0.2, inplace=True)\n                (1): Conv2d(256, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)\n                (2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n                (3): UnetSkipConnectionBlock(\n                  (model): Sequential(\n                    (0): LeakyReLU(negative_slope=0.2, inplace=True)\n                    (1): Conv2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)\n                    (2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n                    (3): UnetSkipConnectionBlock(\n                      (model): Sequential(\n                        (0): LeakyReLU(negative_slope=0.2, inplace=True)\n                        (1): Conv2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)\n                        (2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n                        (3): UnetSkipConnectionBlock(\n                          (model): Sequential(\n                            (0): LeakyReLU(negative_slope=0.2, inplace=True)\n                            (1): Conv2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)\n                            (2): ReLU(inplace=True)\n                            (3): ConvTranspose2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)\n                            (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n                          )\n                        )\n                        (4): ReLU(inplace=True)\n                        (5): ConvTranspose2d(1024, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)\n                        (6): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n                      )\n                    )\n                    (4): ReLU(inplace=True)\n                    (5): ConvTranspose2d(1024, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)\n                    (6): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n                  )\n                )\n                (4): ReLU(inplace=True)\n                (5): ConvTranspose2d(1024, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)\n                (6): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n              )\n            )\n            (4): ReLU(inplace=True)\n            (5): ConvTranspose2d(512, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)\n            (6): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n        )\n        (4): ReLU(inplace=True)\n        (5): ConvTranspose2d(256, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)\n        (6): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (2): ReLU(inplace=True)\n    (3): ConvTranspose2d(128, 3, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))\n    (4): Tanh()\n  )\n)", "parameters": [["model.0.weight", [64, 3, 4, 4]], ["model.1.model.1.weight", [128, 64, 4, 4]], ["model.1.model.2.weight", [128]], ["model.1.model.2.bias", [128]], ["model.1.model.3.model.1.weight", [256, 128, 4, 4]], ["model.1.model.3.model.2.weight", [256]], ["model.1.model.3.model.2.bias", [256]], ["model.1.model.3.model.3.model.1.weight", [512, 256, 4, 4]], ["model.1.model.3.model.3.model.2.weight", [512]], ["model.1.model.3.model.3.model.2.bias", [512]], ["model.1.model.3.model.3.model.3.model.1.weight", [512, 512, 4, 4]], ["model.1.model.3.model.3.model.3.model.2.weight", [512]], ["model.1.model.3.model.3.model.3.model.2.bias", [512]], ["model.1.model.3.model.3.model.3.model.3.model.1.weight", [512, 512, 4, 4]], ["model.1.model.3.model.3.model.3.model.3.model.2.weight", [512]], ["model.1.model.3.model.3.model.3.model.3.model.2.bias", [512]], ["model.1.model.3.model.3.model.3.model.3.model.3.model.1.weight", [512, 512, 4, 4]], ["model.1.model.3.model.3.model.3.model.3.model.3.model.3.weight", [512, 512, 4, 4]], ["model.1.model.3.model.3.model.3.model.3.model.3.model.4.weight", [512]], ["model.1.model.3.model.3.model.3.model.3.model.3.model.4.bias", [512]], ["model.1.model.3.model.3.model.3.model.3.model.5.weight", [1024, 512, 4, 4]], ["model.1.model.3.model.3.model.3.model.3.model.6.weight", [512]], ["model.1.model.3.model.3.model.3.model.3.model.6.bias", [512]], ["model.1.model.3.model.3.model.3.model.5.weight", [1024, 512, 4, 4]], ["model.1.model.3.model.3.model.3.model.6.weight", [512]], ["model.1.model.3.model.3.model.3.model.6.bias", [512]], ["model.1.model.3.model.3.model.5.weight", [1024, 256, 4, 4]], ["model.1.model.3.model.3.model.6.weight", [256]], ["model.1.model.3.model.3.model.6.bias", [256]], ["model.1.model.3.model.5.weight", [512, 128, 4, 4]], ["model.1.model.3.model.6.weight", [128]], ["model.1.model.3.model.6.bias", [128]], ["model.1.model.5.weight", [256, 64, 4, 4]], ["model.1.model.6.weight", [64]], ["model.1.model.6.bias", [64]], ["model.3.weight", [128, 3, 4, 4]], ["model.3.bias", [3]]], "output_shape": [[64, 3, 256, 256]], "num_parameters": [3072, 131072, 128, 128, 524288, 256, 256, 2097152, 512, 512, 4194304, 512, 512, 4194304, 512, 512, 4194304, 4194304, 512, 512, 8388608, 512, 512, 8388608, 512, 512, 4194304, 256, 256, 1048576, 128, 128, 262144, 64, 64, 6144, 3]}], "edges": []}